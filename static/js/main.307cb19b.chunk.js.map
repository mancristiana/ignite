{"version":3,"sources":["components/talk/Talk.module.css","components/agendaItem/AgendaItem.module.css","App.module.css","components/talks/Talks.module.css","components/agenda/Agenda.module.css","components/time/Time.module.css","components/header/Header.module.css","components/header/Header.jsx","shared/Color.service.js","components/talk/Talk.jsx","shared/Time.service.js","components/time/Time.jsx","components/talks/Talks.jsx","components/agendaItem/AgendaItem.jsx","components/agenda/Agenda.jsx","App.jsx","data.js","serviceWorker.js","index.js"],"names":["module","exports","talk","location","details","title","speaker","description","categories","category","room","agendaItem","agendaDetails","app","liveTalk","agenda","activeTalks","talks","time","compressed","header","Header","_ref","children","_ref$size","size","react_default","a","createElement","className","styles","style","fontSize","generateColor","text","Talk","name","timeStart","timeEnd","Talk_Location","Talk_Categories","Talk_Title","Talk_Speaker","dangerouslySetInnerHTML","__html","Location","_ref2","Title","_ref3","Speaker","_ref4","replace","Categories","_ref5","_ref5$categories","split","map","index","key","backgroundColor","getNow","moment","compare","date1","date2","isSame","isBefore","Time","_ref$compressed","join","dateStart","dateEnd","format","concat","formatDuration","Talks","data","now","sort","talk1","talk2","filter","item","startTime","endTime","startTimeMoment","subtract","endTimeMoment","add","nowMoment","isAfter","isLive","reduce","talksGroupedByTime","group","find","g","push","Time_Time","Talks_ActiveTalks","ActiveTalks","Talk_Talk","descriptionHtml","contributors","AgendaItem","AgendaItem_Title","AgendaItem_Speaker","AgendaItem_Location","Agenda","today","day","array","Agenda_AgendaItems","AgendaItems","AgendaItem_AgendaItem","App","date","_useState","useState","_useState2","Object","slicedToArray","setData","_useState3","_useState4","setNow","useEffect","parsedData","Papa","parse","interval","setInterval","clearInterval","header_Header","Talks_Talks","Agenda_Agenda","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.307cb19b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"talk\":\"Talk_talk__1u4eT\",\"location\":\"Talk_location__27Ose\",\"details\":\"Talk_details__2QAJE\",\"title\":\"Talk_title__165Ga\",\"speaker\":\"Talk_speaker__330nr\",\"description\":\"Talk_description__3U64b\",\"categories\":\"Talk_categories__I7ZfN\",\"category\":\"Talk_category__3Yg5l\",\"room\":\"Talk_room__1izAD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"agendaItem\":\"AgendaItem_agendaItem__gqFIq\",\"agendaDetails\":\"AgendaItem_agendaDetails__1gIud\",\"title\":\"AgendaItem_title__27csx\",\"speaker\":\"AgendaItem_speaker__2l9XJ\",\"room\":\"AgendaItem_room__91uko\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2tDt6\",\"liveTalk\":\"App_liveTalk__2DgDd\",\"agenda\":\"App_agenda__Zbqzq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"activeTalks\":\"Talks_activeTalks__3AUZ8\",\"talks\":\"Talks_talks__2YErk\",\"talk\":\"Talks_talk__q_Has\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"activeTalks\":\"Agenda_activeTalks__3XQbW\",\"talks\":\"Agenda_talks__394x7\",\"talk\":\"Agenda_talk__30aD-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"time\":\"Time_time__2lNif\",\"compressed\":\"Time_compressed__MVsBn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3Pizt\"};","import React from 'react';\r\nimport styles from './Header.module.css';\r\n\r\nconst Header = ({ children, size = 50}) => (\r\n  <div className={styles.header} style={{fontSize: size}}>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nexport default Header;\r\n","export function generateColor(text) {\r\n  switch (text) {\r\n    case \"Productivity & Library + Library Admin\":\r\n      return \"#8bc34a\";\r\n    case \"Dynamics + Integrations\":\r\n      return \"#9c27b0\";\r\n    case \"Platform + Email Signature\":\r\n      return \"#3f51b5\";\r\n    case \"Social\":\r\n      return \"#ffc107\";\r\n    default: return \"#000\"\r\n  }\r\n\r\n}","import React from 'react';\r\nimport styles from './Talk.module.css';\r\nimport { generateColor } from './../../shared/Color.service';\r\n\r\nexport const Talk = ({ name, description, speaker, categories, timeStart, timeEnd, room }) => (\r\n\r\n\r\n  <div className={styles.talk}>\r\n    <div className={styles.location}>\r\n      <Location room={room} />\r\n      <Categories categories={categories} />\r\n    </div>\r\n\r\n    <div className={styles.details}>\r\n      <Title name={name} />\r\n      <Speaker name={speaker} />\r\n      <div className={styles.description} dangerouslySetInnerHTML={{ __html: description }} />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nconst Location = ({ room }) => (\r\n  <div className={styles.room}>{room}</div>\r\n);\r\n\r\nconst Title = ({ name }) => (\r\n  <h1 className={styles.title}>{name}</h1>\r\n);\r\n\r\nconst Speaker = ({ name }) => (\r\n  <div className={styles.speaker}>{name.replace(\"-\", \" \")}</div>\r\n);\r\n\r\nconst Categories = ({ categories = [] }) => (\r\n  <div className={styles.categories}>\r\n    {categories.split(\", \").map((category, index) =>\r\n      <div key={index}\r\n        className={styles.category}\r\n        style={{ backgroundColor: generateColor(category) }}>{category}</div>)}\r\n  </div>\r\n);\r\n\r\n\r\n","import moment from 'moment';\r\n\r\nexport function getNow() {\r\n  return moment();\r\n}\r\n\r\nexport function isTimeOnGivenDay(time, day) {\r\n  return moment(time).isSame(moment(day), 'day');\r\n}\r\n\r\nexport function isLive(startTime, endTime, now) {\r\n  let startTimeMoment = moment(startTime).subtract(1, \"hour\");\r\n  let endTimeMoment = moment(endTime).add(15, \"minutes\");;\r\n  let nowMoment = moment(now);\r\n  \r\n  return nowMoment.isAfter(startTimeMoment) && \r\n    nowMoment.isBefore(endTimeMoment);\r\n}\r\n\r\nexport function compare(date1, date2) {\r\n  if (moment(date1).isSame(date2)) {\r\n    return 0;\r\n  } else if (moment(date1).isBefore(date2)) {\r\n    return -1;\r\n  } else {\r\n    return 1;\r\n  }\r\n}\r\n\r\nexport function formatDuration(dateStart, dateEnd) {\r\n  let timeStart = moment(dateStart).format(\"H:mm\");\r\n\r\n  if(dateEnd) {\r\n    let timeEnd = moment(dateEnd).format(\"H:mm\");\r\n    return `${timeStart} - ${timeEnd}`;\r\n  } else {\r\n    return timeStart;\r\n  }\r\n}\r\n\r\nexport function formatDay(date) {\r\n  return moment(date).format(\"ddd, Do MMMM\");\r\n}\r\n","import React from 'react';\r\nimport styles from './Time.module.css';\r\nimport { formatDuration } from './../../shared/Time.service';\r\n\r\nexport const Time = ({ timeStart, timeEnd, compressed = false }) => (\r\n  <div className={[styles.time, compressed ? styles.compressed : null].join(\" \")}>\r\n    {formatDuration(timeStart, timeEnd)}\r\n  </div>\r\n);\r\n\r\n\r\n","import React from 'react';\r\nimport styles from './Talks.module.css';\r\nimport { Talk } from './../talk/Talk';\r\nimport { Time } from './../time/Time';\r\nimport { compare, isLive } from './../../shared/Time.service';\r\n\r\nexport const Talks = ({ data, now }) => (\r\n  <div>\r\n    {data\r\n      .sort((talk1, talk2) => compare(talk1.timeStart, talk2.timeStart))\r\n      .filter(item => isLive(item.timeStart, item.timeEnd, now))\r\n      .reduce((talksGroupedByTime, talk) => {\r\n\r\n        let group = talksGroupedByTime.find(g => g.timeStart === talk.timeStart);\r\n        if (group) {\r\n          group.data.push(talk);\r\n        } else {\r\n          talksGroupedByTime.push({\r\n            timeStart: talk.timeStart,\r\n            timeEnd: talk.timeEnd,\r\n            data: [talk]\r\n          });\r\n        }\r\n\r\n        return talksGroupedByTime;\r\n      }, [])\r\n      .map((group, index) => (\r\n        <div className={styles.activeTalks} key={index}>\r\n          <Time timeStart={group.timeStart} timeEnd={group.timeEnd} />\r\n          <ActiveTalks data={group.data} />\r\n        </div>\r\n      ))};\r\n</div>\r\n\r\n\r\n);\r\n\r\n\r\nconst ActiveTalks = ({ data }) => (<div className={styles.talks}>\r\n  {data\r\n    .map((talk, index) =>\r\n      <div className={styles.talk} key={index}>\r\n        <Talk\r\n          name={talk.name}\r\n          description={talk.descriptionHtml}\r\n          speaker={talk.contributors}\r\n          categories={talk.categories}\r\n          timeStart={talk.timeStart}\r\n          timeEnd={talk.timeEnd}\r\n          room={talk.room}\r\n        />\r\n      </div>\r\n    )}\r\n</div>\r\n);\r\n","import React from 'react';\r\nimport styles from './AgendaItem.module.css';\r\n\r\nexport const AgendaItem = ({ name, speaker, categories, room }) => (\r\n  <div className={styles.agendaItem}>\r\n    <Title name={name} />\r\n    <div className={styles.agendaDetails}>\r\n      <Speaker name={speaker} />\r\n      <Location room={room} />\r\n      {/* <Categories categories={categories} /> */}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nconst Title = ({ name }) => (\r\n  <h1 className={styles.title}>{name}</h1>\r\n);\r\n\r\nconst Speaker = ({ name }) => (\r\n  <div className={styles.speaker}>{name.replace(\"-\", \" \")}</div>\r\n);\r\n\r\nconst Location = ({ room }) => (\r\n  <div className={styles.room}>{room}</div>\r\n);\r\n\r\n","import React from 'react';\r\nimport styles from './Agenda.module.css';\r\nimport { AgendaItem } from './../agendaItem/AgendaItem';\r\nimport { Time } from './../time/Time';\r\nimport { compare, isTimeOnGivenDay } from './../../shared/Time.service';\r\n\r\nexport const Agenda = ({ data, today }) => (\r\n  <div>\r\n    {data\r\n      .sort((talk1, talk2) => compare(talk1.timeStart, talk2.timeStart))\r\n      .filter(item => isTimeOnGivenDay(item.timeStart, today))\r\n      .reduce((talksGroupedByTime, talk, index, array) => {\r\n\r\n        let group = talksGroupedByTime.find(g => g.timeStart === talk.timeStart);\r\n        if (group) {\r\n          group.data.push(talk);\r\n        } else {\r\n          talksGroupedByTime.push({\r\n            timeStart: talk.timeStart,\r\n            timeEnd: talk.timeEnd,\r\n            data: [talk]\r\n          });\r\n        }\r\n\r\n        return talksGroupedByTime;\r\n      }, [])\r\n      .map((group, index) => (\r\n        <div className={styles.activeTalks} key={index}>\r\n          <Time timeStart={group.timeStart} timeEnd={group.timeEnd} compressed={true} />\r\n          <AgendaItems data={group.data} />\r\n        </div>\r\n      ))};\r\n</div>\r\n\r\n\r\n);\r\n\r\n\r\nconst AgendaItems = ({ data }) => (<div className={styles.talks}>\r\n  {data\r\n    .map((talk, index) =>\r\n      <div className={styles.talk} key={index}>\r\n        <AgendaItem\r\n          name={talk.name}\r\n          speaker={talk.contributors}\r\n          categories={talk.categories}\r\n          timeStart={talk.timeStart}\r\n          timeEnd={talk.timeEnd}\r\n          room={talk.room}\r\n        />\r\n      </div>\r\n    )}\r\n</div>\r\n);\r\n","import Papa from 'papaparse';\r\nimport React, { useEffect, useState } from 'react';\r\nimport styles from './App.module.css';\r\nimport Header from './components/header/Header';\r\nimport { Talks } from './components/talks/Talks';\r\nimport { Agenda } from './components/agenda/Agenda';\r\nimport { csvData } from \"./data.js\";\r\nimport { formatDay, getNow } from \"./shared/Time.service\";\r\n\r\nconst App = () => {\r\n  const [data, setData] = useState([]);\r\n  const [now, setNow] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const parsedData = Papa.parse(csvData, {\r\n      header: true\r\n    });\r\n    setData(parsedData.data);\r\n    setNow(getNow());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setNow(getNow());\r\n    }, 36000);\r\n\r\n    return () => clearInterval(interval);\r\n  });\r\n\r\n  return (\r\n    <div className={styles.app}>\r\n      <div className={styles.liveTalk}>\r\n        <Header>Templafy Ignite</Header>\r\n        <Talks data={data} now={now}/>\r\n      </div>\r\n      <div className={styles.agenda}>\r\n        <Header size={30}>{formatDay(now)}</Header>\r\n        <Agenda data={data} today={now} />\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","export const csvData = `alias,name,venue,room,categories,sortOrder,timeStart,timeEnd,contributors,descriptionHtml\napplication-insights-data-lake-and-power-bi,\"Application Insights, Data Lake & Power BI\",templafy-aps,Room 6,Productivity & Library + Library Admin,100,2019-08-07 12:45,2019-08-07 14:00,maren-demuth,\"<div>Show tracking in Application Insights, and how data flows to Data Lake and Power BI. Ensure everyone understands that tracking is a part of every story. <br /><strong>Hands-on:</strong> Query PowerBI &amp; Applicaiton Insights</div>\"\napplication-insights-data-lake-and-power-bi-2,\"Application Insights, Data Lake & Power BI\",templafy-aps,Room 2,Dynamics + Integrations,100,2019-08-07 14:15,2019-08-07 15:30,maren-demuth,\"<div>Show tracking in Application Insights, and how data flows to Data Lake and Power BI. Ensure everyone understands that tracking is a part of every story. <br /><strong>Hands-on:</strong> Query PowerBI &amp; Applicaiton Insights</div>\"\napplication-insights-data-lake-and-power-bi-3,\"Application Insights, Data Lake & Power BI\",templafy-aps,Room 2,Platform + Email Signature,100,2019-08-07 15:45,2019-08-07 17:00,maren-demuth,\"<div>Show tracking in Application Insights, and how data flows to Data Lake and Power BI. Ensure everyone understands that tracking is a part of every story. <br /><strong>Hands-on:</strong> Query PowerBI &amp; Applicaiton Insights</div>\"\nclean-code-backend-and-coding-convention-in-templafy,Clean code (Backend) and coding convention in Templafy,templafy-aps,Room 5,Productivity & Library + Library Admin,100,2019-08-07 09:00,2019-08-07 10:15,rene-gundersen,\"<div>Explain what we consider clean code. Introduce SonarQube, R# Analytics &amp; Code Cleanup, and time saving shortcuts.<br /><strong>Hands on:</strong> Clean up a piece of not so clean code (without using the mouse!)</div>\"\nclean-code-backend-and-coding-convention-in-templafy-2,Clean code (Backend) and coding convention in Templafy,templafy-aps,Room 5,Dynamics + Integrations,100,2019-08-07 10:30,2019-08-07 11:45,rene-gundersen,\"<div>Explain what we consider clean code. Introduce SonarQube, R# Analytics &amp; Code Cleanup, and time saving shortcuts.<br /><strong>Hands on:</strong> Clean up a piece of not so clean code (without using the mouse!)</div>\"\nclean-code-backend-and-coding-convention-in-templafy-3,Clean code (Backend) and coding convention in Templafy,templafy-aps,Room 5,Platform + Email Signature,100,2019-08-07 12:45,2019-08-07 14:00,rene-gundersen,\"<div>Explain what we consider clean code. Introduce SonarQube, R# Analytics &amp; Code Cleanup, and time saving shortcuts.<br /><strong>Hands on:</strong> Clean up a piece of not so clean code (without using the mouse!)</div>\"\ndatabase-and-code-migrations,Database and code migrations,templafy-aps,Room 6,Dynamics + Integrations,100,2019-08-06 12:45,2019-08-06 14:00,ashkan-sirous,\"<div>Ensure that everyone understands our Cloud stack. Including Application Gateway, Traffic Manager, Azure Functions, Service Bus, Key Vault, Docker in Web Apps, Elastic Pool, TerraForm, Security Center</div>\"\ndatabase-and-code-migrations-2,Database and code migrations,templafy-aps,Room 5,Platform + Email Signature,100,2019-08-06 14:15,2019-08-06 15:30,ashkan-sirous,\"<div>Ensure that everyone understands our Cloud stack. Including Application Gateway, Traffic Manager, Azure Functions, Service Bus, Key Vault, Docker in Web Apps, Elastic Pool, TerraForm, Security Center</div>\"\ndatabase-and-code-migrations-3,Database and code migrations,templafy-aps,Room 5,Productivity & Library + Library Admin,100,2019-08-06 15:45,2019-08-06 17:00,ashkan-sirous,\"<div>Ensure that everyone understands our Cloud stack. Including Application Gateway, Traffic Manager, Azure Functions, Service Bus, Key Vault, Docker in Web Apps, Elastic Pool, TerraForm, Security Center</div>\"\ndinner,Dinner,undici,,Social,100,2019-08-06 19:00,,,\ndinner-2,Dinner,kayak-bar,,Social,100,2019-08-07 18:30,,,\ndocker,Docker,templafy-aps,Room 4,Platform + Email Signature,100,2019-08-06 12:45,2019-08-06 14:00,morten-henriksen,\"<div>Ensure everyone is familiar with Docker, Docker-compose, Enviroment varibles, docker pull/build/up/down, etc. Nginx<br /><strong>Hands-on:</strong> Spinup a Self-contained systems, Change to another, add a new dependency to a new system</div>\"\ndocker-2,Docker,templafy-aps,Room 1,Productivity & Library + Library Admin,100,2019-08-06 14:15,2019-08-06 15:30,morten-henriksen,\"<div>Ensure everyone is familiar with Docker, Docker-compose, Enviroment varibles, docker pull/build/up/down, etc. Nginx<br /><strong>Hands-on:</strong> Spinup a Self-contained systems, Change to another, add a new dependency to a new system</div>\"\ndocker-3,Docker,templafy-aps,Room 1,Dynamics + Integrations,100,2019-08-06 15:45,2019-08-06 17:00,morten-henriksen,\"<div>Ensure everyone is familiar with Docker, Docker-compose, Enviroment varibles, docker pull/build/up/down, etc. Nginx<br /><strong>Hands-on:</strong> Spinup a Self-contained systems, Change to another, add a new dependency to a new system</div>\"\ndomain-driven-design,Domain Driven Design,templafy-aps,Room 5,Productivity & Library + Library Admin,100,2019-08-06 12:45,2019-08-06 14:00,lars-thomsen,\"<div>Explain Bounded Context, Ubigtious Language, and patterns like Layered Archicture, Repository, Services, Domain Events, Specefications, Aggregate, Entity and Value objects.<br /><strong>Hands-on:</strong> Create a Repository, Service Query, Command and rais events.</div>\"\ndomain-driven-design-2,Domain Driven Design,templafy-aps,Room 2,Dynamics + Integrations,100,2019-08-06 14:15,2019-08-06 15:30,lars-thomsen,\"<div>Explain Bounded Context, Ubigtious Language, and patterns like Layered Archicture, Repository, Services, Domain Events, Specefications, Aggregate, Entity and Value objects.<br /><strong>Hands-on:</strong> Create a Repository, Service Query, Command and rais events.</div>\"\ndomain-driven-design-3,Domain Driven Design,templafy-aps,Room 2,Platform + Email Signature,100,2019-08-06 15:45,2019-08-06 17:00,lars-thomsen,\"<div>Explain Bounded Context, Ubigtious Language, and patterns like Layered Archicture, Repository, Services, Domain Events, Specefications, Aggregate, Entity and Value objects.<br /><strong>Hands-on:</strong> Create a Repository, Service Query, Command and rais events.</div>\"\nevent-driven-archicture,Event Driven Archicture,templafy-aps,Room 1,Productivity & Library + Library Admin,100,2019-08-08 09:00,2019-08-08 10:15,,\"<div>Explain how events let data flow between Self-contained Systems. Show how we gurantee that events are delivered, and how the systems eventually will be consistent.<br /><strong>Hand-on:</strong> Raise events in one system and receive in another</div>\"\nevent-driven-archicture-2,Event Driven Archicture,templafy-aps,Room 6,Dynamics + Integrations,100,2019-08-08 10:30,2019-08-08 11:45,,\"<div>Explain how events let data flow between Self-contained Systems. Show how we gurantee that events are delivered, and how the systems eventually will be consistent.<br /><strong>Hand-on:</strong> Raise events in one system and receive in another</div>\"\nevent-driven-archicture-3,Event Driven Archicture,templafy-aps,Room 6,Platform + Email Signature,100,2019-08-08 12:45,2019-08-08 14:00,,\"<div>Explain how events let data flow between Self-contained Systems. Show how we gurantee that events are delivered, and how the systems eventually will be consistent.<br /><strong>Hand-on:</strong> Raise events in one system and receive in another</div>\"\ninfrastructure-as-code-with-terraform,Infrastructure as Code with Terraform,templafy-aps,Room 1,Productivity & Library + Library Admin,100,2019-08-08 14:15,2019-08-08 15:30,\"attila-kurucz, bo-larsen\",\"<div>Explain how all changes to Feature and Production environments will be done as code with version control, using Terraform<br /><strong>Hands-on:</strong> Everyone will provisioning a new service and afterwards upgrade, and finally delete it</div>\"\ninfrastructure-as-code-with-terraform-2,Infrastructure as Code with Terraform,templafy-aps,Room 2,Dynamics + Integrations,100,2019-08-08 15:45,2019-08-08 17:00,\"attila-kurucz, bo-larsen\",\"<div>Explain how all changes to Feature and Production environments will be done as code with version control, using Terraform<br /><strong>Hands-on:</strong> Everyone will provisioning a new service and afterwards upgrade, and finally delete it</div>\"\ninfrastructure-as-code-with-terraform-3,Infrastructure as Code with Terraform,templafy-aps,Room 2,Platform + Email Signature,100,2019-08-08 09:00,2019-08-08 10:15,\"attila-kurucz, bo-larsen\",\"<div>Explain how all changes to Feature and Production environments will be done as code with version control, using Terraform<br /><strong>Hands-on:</strong> Everyone will provisioning a new service and afterwards upgrade, and finally delete it</div>\"\nkeynote-collaboration-and-agile-principles,Keynote: Collaboration and Agile principles,templafy-aps,Room 4 + 5 + 6,\"Productivity & Library + Library Admin, Dynamics + Integrations, Platform + Email Signature\",100,2019-08-06 09:00,2019-08-06 10:15,thomas-jespersen,\"<div>We will talk about Team structure (Squads, Guilds, etc). We will talk about who is responsible for our technical platform, and why colaboration and sharing across teams is key to success.</div>\"\nmeet-your-team-and-product-owner-team-1,Meet your Team and Product Owner (Team 1),templafy-aps,Room 1,Productivity & Library + Library Admin,100,2019-08-06 17:15,2019-08-06 18:00,,\"<div>Your Product Owner will introduce the Team Road map, and you will discuss how the first sprints should run.</div>\"\nmeet-your-team-and-product-owner-team-2,Meet your Team and Product Owner (Team 2),templafy-aps,Room 1,Productivity & Library + Library Admin,100,2019-08-07 17:15,2019-08-07 18:00,,\"<div>Your Product Owner will introduce the Team Road map, and you will discuss how the first sprints should run.</div>\"\nmeet-your-team-and-product-owner-team-3,Meet your Team and Product Owner (Team 3),templafy-aps,Room 2,Dynamics + Integrations,100,2019-08-06 17:15,2019-08-06 18:00,,\"<div>Your Product Owner will introduce the Team Road map, and you will discuss how the first sprints should run.</div>\"\nmeet-your-team-and-product-owner-team-4,Meet your Team and Product Owner (Team 4),templafy-aps,Room 2,Dynamics + Integrations,100,2019-08-07 17:15,2019-08-07 18:00,,\"<div>Your Product Owner will introduce the Team Road map, and you will discuss how the first sprints should run.</div>\"\nmeet-your-team-and-product-owner-team-5,Meet your Team and Product Owner (Team 5),templafy-aps,Room 5,Platform + Email Signature,100,2019-08-06 17:15,2019-08-06 18:00,,\"<div>Your Product Owner will introduce the Team Road map, and you will discuss how the first sprints should run.</div>\"\nmeet-your-team-and-product-owner-team-6,Meet your Team and Product Owner (Team 6),templafy-aps,Room 5,Platform + Email Signature,100,2019-08-07 17:15,2019-08-07 18:00,,\"<div>Your Product Owner will introduce the Team Road map, and you will discuss how the first sprints should run.</div>\"\nrelease-procedure-and-monitoring,Release Procedure and monitoring,templafy-aps,Room 2,Productivity & Library + Library Admin,100,2019-08-08 10:30,2019-08-08 11:45,dan-antal,\"<div>Show how our release procedure works. Including pair reviews. Introduce git and trunked based development, Azure Pipelines. Introduce code and database migragions. Show PagerDuty and StatusPage:Azure DevOps automation.<br /><strong>Hands-on:</strong> Setup a build pipe line in yaml</div>\"\nrelease-procedure-and-monitoring-2,Release Procedure and monitoring,templafy-aps,Room 2,Dynamics + Integrations,100,2019-08-08 12:45,2019-08-08 14:00,dan-antal,\"<div>Show how our release procedure works. Including pair reviews. Introduce git and trunked based development, Azure Pipelines. Introduce code and database migragions. Show PagerDuty and StatusPage:Azure DevOps automation.<br /><strong>Hands-on:</strong> Setup a build pipe line in yaml</div>\"\nrelease-procedure-and-monitoring-3,Release Procedure and monitoring,templafy-aps,Room 2,Platform + Email Signature,100,2019-08-08 14:15,2019-08-08 15:30,dan-antal,\"<div>Show how our release procedure works. Including pair reviews. Introduce git and trunked based development, Azure Pipelines. Introduce code and database migragions. Show PagerDuty and StatusPage:Azure DevOps automation.<br /><strong>Hands-on:</strong> Setup a build pipe line in yaml</div>\"\nscavenger-hunt,Scavenger hunt,templafy-aps,,Social,100,2019-08-06 18:00,2019-08-06 19:00,,\nsecurity-awareness-and-ethical-hacking,Security awareness and ethical hacking,templafy-aps,Room 6,Productivity & Library + Library Admin,100,2019-08-08 15:45,2019-08-08 17:00,christian-peeters,<div>TBA</div>\nsecurity-awareness-and-ethical-hacking-2,Security awareness and ethical hacking,templafy-aps,Room 5,Dynamics + Integrations,100,2019-08-08 09:00,2019-08-08 10:15,christian-peeters,<div>TBA</div>\nsecurity-awareness-and-ethical-hacking-3,Security awareness and ethical hacking,templafy-aps,Room 5,Platform + Email Signature,100,2019-08-08 10:30,2019-08-08 11:45,christian-peeters,<div>TBA</div>\nself-contained-systems,Self-contained systems,templafy-aps,Room 4 + 5 + 6,\"Productivity & Library + Library Admin, Dynamics + Integrations, Platform + Email Signature\",100,2019-08-06 10:30,2019-08-06 11:45,thomas-jespersen,\"<div>Explain the overall structure of Self-contained systems, and how the differ from Micro services. Explain the flow of data and over all archictecture of the future Templafy.</div>\"\nteamwork-in-templafy,Teamwork in Templafy,templafy-aps,Room 1,Productivity & Library + Library Admin,100,2019-08-07 15:45,2019-08-07 17:00,mie-aoki,\"<div>Mie will talk about team dynamics and the phases new teams go through. She will (hopefully) make some small team exercises, which you can use to build trust.</div>\"\nteamwork-in-templafy-2,Teamwork in Templafy,templafy-aps,Room 1,Dynamics + Integrations,100,2019-08-07 09:00,2019-08-07 10:15,mie-aoki,\"<div>Mie will talk about team dynamics and the phases new teams go through. She will (hopefully) make some small team exercises, which you can use to build trust.</div>\"\nteamwork-in-templafy-3,Teamwork in Templafy,templafy-aps,Room 1,Platform + Email Signature,100,2019-08-07 10:30,2019-08-07 11:45,mie-aoki,\"<div>Mie will talk about team dynamics and the phases new teams go through. She will (hopefully) make some small team exercises, which you can use to build trust.</div>\"\nui-tests-with-cypress,UI Tests with Cypress,templafy-aps,Room 6,Productivity & Library + Library Admin,100,2019-08-07 10:30,2019-08-07 11:45,\"jakob-hansen, ioana-galan\",<div>Show how Cypress will make end-to-end test fast and stable. Every developer must be able to write these tests as they must be done before we release.<br /><strong>Hands-on:</strong> Create a new test and reuse existing steps</div>\nui-tests-with-cypress-2,UI Tests with Cypress,templafy-aps,Room 1,Dynamics + Integrations,100,2019-08-07 12:45,2019-08-07 14:00,\"jakob-hansen, ioana-galan\",<div>Show how Cypress will make end-to-end test fast and stable. Every developer must be able to write these tests as they must be done before we release.<br /><strong>Hands-on:</strong> Create a new test and reuse existing steps</div>\nui-tests-with-cypress-3,UI Tests with Cypress,templafy-aps,Room 5,Platform + Email Signature,100,2019-08-07 14:15,2019-08-07 15:30,\"jakob-hansen, ioana-galan\",<div>Show how Cypress will make end-to-end test fast and stable. Every developer must be able to write these tests as they must be done before we release.<br /><strong>Hands-on:</strong> Create a new test and reuse existing steps</div>\nunit-tests,Unit Tests,templafy-aps,Room 5,Productivity & Library + Library Admin,100,2019-08-08 12:45,2019-08-08 14:00,matthias-mayrock,\"<div>See how we write greate Tests in our Self-contained systems. We focus on behaviour and not implementation. This session wil introduce Nsubstitute for mocking, and EF inmemory database for fast database testing.<br /><strong>Hands-on:</strong> Write a couple of tests using mocking</div>\"\nunit-tests-2,Unit Tests,templafy-aps,Room 5,Dynamics + Integrations,100,2019-08-08 14:15,2019-08-08 15:30,matthias-mayrock,\"<div>See how we write greate Tests in our Self-contained systems. We focus on behaviour and not implementation. This session wil introduce Nsubstitute for mocking, and EF inmemory database for fast database testing.<br /><strong>Hands-on:</strong> Write a couple of tests using mocking</div>\"\nunit-tests-3,Unit Tests,templafy-aps,Room 5,Platform + Email Signature,100,2019-08-08 15:45,2019-08-08 17:00,matthias-mayrock,\"<div>See how we write greate Tests in our Self-contained systems. We focus on behaviour and not implementation. This session wil introduce Nsubstitute for mocking, and EF inmemory database for fast database testing.<br /><strong>Hands-on:</strong> Write a couple of tests using mocking</div>\"\nusing-ui-toolkit-and-frontend-development,Using UI Toolkit and frontend development,templafy-aps,Room 1,Productivity & Library + Library Admin,100,2019-08-07 14:15,2019-08-07 15:30,\"dan-antal, morten-henriksen\",\"<div>Show how the UI can build, almost without styling. So coding convention and clean code. Ensure everyone uderstands snapshot testing.<br /><strong>Hands-on:</strong> Create a simple form like Invite User</div>\"\nusing-ui-toolkit-and-frontend-development-2,Using UI Toolkit and frontend development,templafy-aps,Room 5,Dynamics + Integrations,100,2019-08-07 15:45,2019-08-07 17:00,\"dan-antal, morten-henriksen\",\"<div>Show how the UI can build, almost without styling. So coding convention and clean code. Ensure everyone uderstands snapshot testing.<br /><strong>Hands-on:</strong> Create a simple form like Invite User</div>\"\nusing-ui-toolkit-and-frontend-development-3,Using UI Toolkit and frontend development,templafy-aps,Room 6,Platform + Email Signature,100,2019-08-07 09:00,2019-08-07 10:15,\"dan-antal, morten-henriksen\",\"<div>Show how the UI can build, almost without styling. So coding convention and clean code. Ensure everyone uderstands snapshot testing.<br /><strong>Hands-on:</strong> Create a simple form like Invite User</div>\"`","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}